#!/usr/bin/env python

import rospy
from nav_msgs.msg import Odometry
from geometry_msgs.msg import TransformStamped
from tf2_ros import TransformBroadcaster

"""
This is a shim for converting the simulator-provided /odom topic to TF X1/odom->X1
"""


def odom_cb(odom_msg):
    assert isinstance(odom_msg, Odometry)
    tf.header.stamp = odom_msg.header.stamp
    tf.transform.translation.x = odom_msg.pose.pose.position.x
    tf.transform.translation.y = odom_msg.pose.pose.position.y
    tf.transform.translation.z = odom_msg.pose.pose.position.z
    tf.transform.rotation.x = odom_msg.pose.pose.orientation.x
    tf.transform.rotation.y = odom_msg.pose.pose.orientation.y
    tf.transform.rotation.z = odom_msg.pose.pose.orientation.z
    tf.transform.rotation.w = odom_msg.pose.pose.orientation.w

    pub.sendTransform(tf)


if __name__ == '__main__':
    rospy.init_node("odom_frame_pub")

    robot_name = rospy.get_param("~robot_name")

    tf = TransformStamped()
    tf.header.frame_id = robot_name + "/odom"
    tf.child_frame_id = robot_name

    pub = TransformBroadcaster()

    odom_sub = rospy.Subscriber("odom", Odometry, odom_cb, queue_size=10)

    try:
        rospy.spin()
    except rospy.ROSInterruptException:
        pass
